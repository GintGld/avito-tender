// Code generated by mockery v2.45.1. DO NOT EDIT.

package mocks

import (
	context "context"
	models "tender/internal/models"

	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// RollbackStorage is an autogenerated mock type for the RollbackStorage type
type RollbackStorage struct {
	mock.Mock
}

// RecoverBid provides a mock function with given fields: ctx, bidId, version
func (_m *RollbackStorage) RecoverBid(ctx context.Context, bidId uuid.UUID, version int32) (models.Bid, error) {
	ret := _m.Called(ctx, bidId, version)

	if len(ret) == 0 {
		panic("no return value specified for RecoverBid")
	}

	var r0 models.Bid
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID, int32) (models.Bid, error)); ok {
		return rf(ctx, bidId, version)
	}
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID, int32) models.Bid); ok {
		r0 = rf(ctx, bidId, version)
	} else {
		r0 = ret.Get(0).(models.Bid)
	}

	if rf, ok := ret.Get(1).(func(context.Context, uuid.UUID, int32) error); ok {
		r1 = rf(ctx, bidId, version)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RecoverTender provides a mock function with given fields: ctx, tenderId, version
func (_m *RollbackStorage) RecoverTender(ctx context.Context, tenderId uuid.UUID, version int32) (models.Tender, error) {
	ret := _m.Called(ctx, tenderId, version)

	if len(ret) == 0 {
		panic("no return value specified for RecoverTender")
	}

	var r0 models.Tender
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID, int32) (models.Tender, error)); ok {
		return rf(ctx, tenderId, version)
	}
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID, int32) models.Tender); ok {
		r0 = rf(ctx, tenderId, version)
	} else {
		r0 = ret.Get(0).(models.Tender)
	}

	if rf, ok := ret.Get(1).(func(context.Context, uuid.UUID, int32) error); ok {
		r1 = rf(ctx, tenderId, version)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveBid provides a mock function with given fields: ctx, bid
func (_m *RollbackStorage) SaveBid(ctx context.Context, bid models.Bid) error {
	ret := _m.Called(ctx, bid)

	if len(ret) == 0 {
		panic("no return value specified for SaveBid")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, models.Bid) error); ok {
		r0 = rf(ctx, bid)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SaveTender provides a mock function with given fields: ctx, tender
func (_m *RollbackStorage) SaveTender(ctx context.Context, tender models.Tender) error {
	ret := _m.Called(ctx, tender)

	if len(ret) == 0 {
		panic("no return value specified for SaveTender")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, models.Tender) error); ok {
		r0 = rf(ctx, tender)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRollbackStorage creates a new instance of RollbackStorage. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRollbackStorage(t interface {
	mock.TestingT
	Cleanup(func())
}) *RollbackStorage {
	mock := &RollbackStorage{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
